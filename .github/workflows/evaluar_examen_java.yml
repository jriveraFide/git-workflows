name: Evaluar Examen Manual

on:
  workflow_call:
    inputs:
      carpeta:
        description: 'Nombre de la carpeta del examen (ej. examen1)'
        required: true
        type: string
      repo_estudiantes:
        description: 'Nombre del repositorio de los estudiantes (ej. repositorio-de-estudiantes)'
        required: true
        type: string

jobs:
  evaluar_examen:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
      REPO_REPORTES : ${{ secrets.REPO_REPORTES }}
      

    steps:
      # Clonar el repositorio de los estudiantes en una carpeta llamada estudiantes
      - name: Clonar el repositorio actual
        uses: actions/checkout@v3
        with:
          repository: jriveraFide/git-workflows
          token: ${{ secrets.GITHUB_TOKEN }}  # Autenticación con el token de GitHub
          path: evaluador  # Carpeta donde se clonará el repositorio de estudiantes

      # Clonar el repositorio de los estudiantes en una carpeta llamada estudiantes
      - name: Clonar el repositorio de los estudiantes
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.repo_estudiantes }}  # Usar el nombre del repositorio de estudiantes como input
          token: ${{ secrets.GITHUB_TOKEN }}  # Autenticación con el token de GitHub
          path: estudiantes  # Carpeta donde se clonará el repositorio de estudiantes

      # Confirmación de los archivos y directorios que tenemos
      - name: Listar el contenido de los directorios
        run: |
          echo "Contenido del repositorio evaluador:"
          ls -la
          echo "Contenido del repositorio de estudiantes:"
          ls -la estudiantes/

      # Configuración de Python
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Crear y configurar .netrc para autenticación
      - name: Setup .netrc
        run: |
          echo "machine github.com login $GITHUB_ACTOR password $GITHUB_TOKEN" > ~/.netrc
          chmod 600 ~/.netrc
        shell: bash

      # Instalar dependencias
      - name: Instalar dependencias
        run: pip install openai

      # Evaluar los archivos en la carpeta indicada
      - name: Evaluar todos los archivos en la carpeta indicada
        run: |
          carpeta="${{ github.event.inputs.carpeta }}"
          echo "📂 Evaluando carpeta: $carpeta"

          if [ -f "estudiantes/$carpeta/criterios.json" ]; then
            for archivo in "estudiantes/$carpeta"/*.java; do
              estudiante=$(basename "$archivo" .java)
              echo "🧪 Evaluando: $archivo"
              python3 evaluador/scripts/generar_feedback.py \
                --codigo "$archivo" \
                --criterios "estudiantes/$carpeta/criterios.json" \
                --salida "estudiantes/$carpeta/${estudiante}.md"
            done
          else
            echo "❌ No se encontró criterios.json en $carpeta"
            exit 1
          fi

      # Subir los reportes generados al repositorio de reportes
      - name: Subir reportes al repositorio de reportes
        run: |
          git clone https://$GIT_TOKEN@github.com/jriveraFide/Reportes.git
          mkdir -p Reportes/${{ github.event.inputs.carpeta }}
          cp estudiantes/$carpeta/*.md Reportes/${{ github.event.inputs.carpeta }}/
          cd Reportes
          git add .
          git commit -m "Reportes generados para ${{ github.event.inputs.carpeta }}"
          git push

name: Evaluar Examen Manual

on:
  workflow_call:
    inputs:
      carpeta:
        description: 'Nombre de la carpeta del examen (ej. examen1)'
        required: true
        type: string
      repo_estudiantes:
        description: 'Nombre del repositorio de los estudiantes'
        required: true
        type: string

jobs:
  evaluar_examen:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
      REPO_REPORTES : ${{ secrets.REPO_REPORTES }}

    steps:
      - name: Clonar el repositorio evaluador
        uses: actions/checkout@v3
        with:
          repository: jriveraFide/git-workflows
          token: ${{ secrets.GITHUB_TOKEN }}
          path: evaluador

      - name: Clonar el repositorio de los estudiantes
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.repo_estudiantes }}
          token: ${{ secrets.GITHUB_TOKEN }}
          path: estudiantes

      - name: Clonar el repositorio de los reportes
        uses: actions/checkout@v3
        with:
          repository: jriveraFide/Reportes
          token: ${{ secrets.PAT_REPORTES }}  # ‚Üê Usamos el token personal
          ref: main
          path: reportes


      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Instalar dependencias
        run: pip install openai

      - name: Evaluar todos los archivos en la carpeta indicada
        run: |
          carpeta="${{ github.event.inputs.carpeta }}"
          echo "üìÇ Evaluando carpeta: $carpeta"

          if [ -f "estudiantes/$carpeta/criterios.json" ]; then
            for archivo in "estudiantes/$carpeta"/*.java; do
              estudiante=$(basename "$archivo" .java)
              echo "üß™ Evaluando: $archivo"
              python3 evaluador/scripts/generar_feedback.py \
                --codigo "$archivo" \
                --criterios "estudiantes/$carpeta/criterios.json" \
                --salida "estudiantes/$carpeta/${estudiante}.md"
            done
          else
            echo "‚ùå No se encontr√≥ criterios.json en $carpeta"
            exit 1
          fi

      - name: Subir reportes al repositorio de reportes
        run: |
          carpeta="${{ github.event.inputs.carpeta }}"
          mkdir -p reportes/$carpeta
          cp estudiantes/$carpeta/*.md reportes/$carpeta/

          cd reportes
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add .
          git commit -m "Reportes generados para $carpeta" || echo "Sin cambios para commitear"
          git remote set-url origin https://${{ secrets.PAT_REPORTES }}@github.com/jriveraFide/Reportes.git
          git push

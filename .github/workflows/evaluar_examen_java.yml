name: Evaluar Examen Manual

on:
  workflow_call:
    inputs:
      carpeta:
        description: 'Nombre de la carpeta del examen (ej. examen1)'
        required: true
        type: string
      repo_estudiantes:
        description: 'Nombre del repositorio de los estudiantes (ej. repositorio-de-estudiantes)'
        required: true
        type: string

jobs:
  evaluar_examen:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
      REPO_REPORTES : ${{ secrets.REPO_REPORTES }}

    steps:
      - name: Checkout del repositorio evaluador
        uses: actions/checkout@v3

      - name: Clonar el repositorio de los estudiantes
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.repo_estudiantes }}  # Usar el nombre del repositorio de estudiantes como input
          token: ${{ secrets.GITHUB_TOKEN }}  # Autenticaci√≥n con el token de GitHub
          path: estudiantes  # Carpeta donde se clonar√° el repositorio de estudiantes

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Setup .netrc
        run: |
          cp .netrc ~/.netrc
          chmod +600 ~/.netrc
          sed -i "s/GHE/$GITHUB_TOKEN/g"  ~/.netrc
        shell: bash

      - name: Instalar dependencias
        run: pip install openai

      - name: Evaluar todos los archivos en la carpeta indicada
        run: |
          carpeta="${{ github.event.inputs.carpeta }}"
          echo "üìÇ Evaluando carpeta: $carpeta"

          if [ -f "estudiantes/$carpeta/criterios.json" ]; then  # Cambiado para que apunte al directorio clonado
            for archivo in "estudiantes/$carpeta"/*.java; do  # Cambiado para que apunte al directorio clonado
              estudiante=$(basename "$archivo" .java)
              echo "üß™ Evaluando: $archivo"
              python3 scripts/generar_feedback.py \
                --codigo "$archivo" \
                --criterios "estudiantes/$carpeta/criterios.json" \  # Cambiado para que apunte al directorio clonado
                --salida "estudiantes/$carpeta/${estudiante}.md"  # Cambiado para que apunte al directorio clonado
            done
          else
            echo "‚ùå No se encontr√≥ criterios.json en $carpeta"
            exit 1
          fi

      - name: Subir reportes al repositorio de reportes
        run: |
          git clone $REPO_REPORTES
          mkdir -p Reportes/${{ github.event.inputs.carpeta }}
          cp estudiantes/$carpeta/*.md Reportes/${{ github.event.inputs.carpeta }}/  # Cambiado para que apunte al directorio clonado
          cd Reportes
          git add .
          git commit -m "Reportes generados para ${{ github.event.inputs.carpeta }}"
          git push
